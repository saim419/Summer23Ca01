{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from \"./CountChange\";\nimport UsernameContext from \"./UsernameContext\";\nimport LoginForm from \"./LoginForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handleLogin = function handleLogin() {\n    navigation.navigate('Login');\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Go to Tim's profile\",\n      onPress: function onPress() {\n        return navigation.navigate('Profile', {\n          name: 'Tim'\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Count Change\",\n      onPress: function onPress() {\n        return navigation.navigate('CountChange');\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.name, \"'s profile\"]\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(UsernameContext.Provider, {\n    value: \"tjhickey\",\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Welcome'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen\n        }), _jsx(Stack.Screen, {\n          name: \"CountChange\",\n          component: CountChange\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginForm\n        })]\n      })\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","CountChange","UsernameContext","LoginForm","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","handleLogin","navigate","children","title","onPress","name","ProfileScreen","_ref2","route","params","MyStack","Provider","value","Navigator","Screen","component","options"],"sources":["/Users/saimsiddiqui/Desktop/Ca1/reactnative/code/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\nimport { Button, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from './CountChange';\nimport UsernameContext from './UsernameContext';\nimport LoginForm from './LoginForm';\n\nconst Stack = createNativeStackNavigator();\n\nconst HomeScreen = ({ navigation }) => {\n  const handleLogin = () => {\n    navigation.navigate('Login');\n  };\n\n  return (\n    <View>\n      <Button\n        title=\"Go to Tim's profile\"\n        onPress={() => navigation.navigate('Profile', { name: 'Tim' })}\n      />\n      <Button\n        title=\"Count Change\"\n        onPress={() => navigation.navigate('CountChange')}\n      />\n      <Button title=\"Login\" onPress={handleLogin} />\n    </View>\n  );\n};\n\nconst ProfileScreen = ({ navigation, route }) => {\n  return <Text>This is {route.params.name}'s profile</Text>;\n};\n\nconst MyStack = () => {\n  return (\n    <UsernameContext.Provider value=\"tjhickey\">\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{ title: 'Welcome' }}\n          />\n          <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n          <Stack.Screen name=\"CountChange\" component={CountChange} />\n          <Stack.Screen name=\"Login\" component={LoginForm} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </UsernameContext.Provider>\n  );\n};\n\nexport default MyStack;\n\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAE1C,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,UAAU,CAACE,QAAQ,CAAC,OAAO,CAAC;EAC9B,CAAC;EAED,OACEN,KAAA,CAACT,IAAI;IAAAgB,QAAA,GACHT,IAAA,CAACT,MAAM;MACLmB,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAML,UAAU,CAACE,QAAQ,CAAC,SAAS,EAAE;UAAEI,IAAI,EAAE;QAAM,CAAC,CAAC;MAAA;IAAC,CAChE,CAAC,EACFZ,IAAA,CAACT,MAAM;MACLmB,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAML,UAAU,CAACE,QAAQ,CAAC,aAAa,CAAC;MAAA;IAAC,CACnD,CAAC,EACFR,IAAA,CAACT,MAAM;MAACmB,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEJ;IAAY,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX,CAAC;AAED,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAA8B;EAAA,IAAxBR,UAAU,GAAAQ,KAAA,CAAVR,UAAU;IAAES,KAAK,GAAAD,KAAA,CAALC,KAAK;EACxC,OAAOb,KAAA,CAACV,IAAI;IAAAiB,QAAA,GAAC,UAAQ,EAACM,KAAK,CAACC,MAAM,CAACJ,IAAI,EAAC,YAAU;EAAA,CAAM,CAAC;AAC3D,CAAC;AAED,IAAMK,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,OACEjB,IAAA,CAACH,eAAe,CAACqB,QAAQ;IAACC,KAAK,EAAC,UAAU;IAAAV,QAAA,EACxCT,IAAA,CAACN,mBAAmB;MAAAe,QAAA,EAClBP,KAAA,CAACC,KAAK,CAACiB,SAAS;QAAAX,QAAA,GACdT,IAAA,CAACG,KAAK,CAACkB,MAAM;UACXT,IAAI,EAAC,MAAM;UACXU,SAAS,EAAElB,UAAW;UACtBmB,OAAO,EAAE;YAAEb,KAAK,EAAE;UAAU;QAAE,CAC/B,CAAC,EACFV,IAAA,CAACG,KAAK,CAACkB,MAAM;UAACT,IAAI,EAAC,SAAS;UAACU,SAAS,EAAET;QAAc,CAAE,CAAC,EACzDb,IAAA,CAACG,KAAK,CAACkB,MAAM;UAACT,IAAI,EAAC,aAAa;UAACU,SAAS,EAAE1B;QAAY,CAAE,CAAC,EAC3DI,IAAA,CAACG,KAAK,CAACkB,MAAM;UAACT,IAAI,EAAC,OAAO;UAACU,SAAS,EAAExB;QAAU,CAAE,CAAC;MAAA,CACpC;IAAC,CACC;EAAC,CACE,CAAC;AAE/B,CAAC;AAED,eAAemB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}