{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from \"./CountChange\";\nimport UsernameContext from \"./UsernameContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Go to Tim's profile\",\n      onPress: function onPress() {\n        return navigation.navigate('Profile', {\n          name: 'Tim'\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Count Change\",\n      onPress: function onPress() {\n        return navigation.navigate('CountChange');\n      }\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.name, \"'s profile\"]\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(UsernameContext.Provider, {\n    value: \"tjhickey\",\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Welcome'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen\n        }), _jsx(Stack.Screen, {\n          name: \"CountChange\",\n          component: CountChange\n        })]\n      })\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","CountChange","UsernameContext","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","children","title","onPress","navigate","name","ProfileScreen","_ref2","route","params","MyStack","Provider","value","Navigator","Screen","component","options"],"sources":["/Users/saimsiddiqui/Desktop/Ca1/reactnative/code/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\nimport {Button,Text,View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport CountChange from './CountChange';\nimport UsernameContext from './UsernameContext';\n\nconst Stack = createNativeStackNavigator();\n\nconst HomeScreen = ({navigation}) => {\n    return (\n     <View>\n            <Button\n                title=\"Go to Tim's profile\"\n                onPress={() =>\n                navigation.navigate('Profile', {name: 'Tim'})\n                }\n            />\n            <Button\n                title=\"Count Change\"\n                onPress={() =>\n                navigation.navigate('CountChange') \n                }\n            />\n      </View>\n    );\n  };\n  const ProfileScreen = ({navigation, route}) => {\n    return <Text>This is {route.params.name}'s profile</Text>;\n  };\n\n  // use value={{apikey:'7d8s97f89dsfsd',username:'tjhickey'}}\nconst MyStack = () => {\n  return (\n   <UsernameContext.Provider value=\"tjhickey\">\n      \n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{title: 'Welcome'}}\n        />\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n        <Stack.Screen name=\"CountChange\" component={CountChange} />\n      </Stack.Navigator>\n    </NavigationContainer>\n   </UsernameContext.Provider>\n  );\n};\n\nexport default MyStack;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,WAAW;AAClB,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,KAAK,GAAGP,0BAA0B,CAAC,CAAC;AAE1C,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3B,OACCJ,KAAA,CAACR,IAAI;IAAAa,QAAA,GACEP,IAAA,CAACR,MAAM;MACHgB,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACTH,UAAU,CAACI,QAAQ,CAAC,SAAS,EAAE;UAACC,IAAI,EAAE;QAAK,CAAC,CAAC;MAAA;IAC5C,CACJ,CAAC,EACFX,IAAA,CAACR,MAAM;MACHgB,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACTH,UAAU,CAACI,QAAQ,CAAC,aAAa,CAAC;MAAA;IACjC,CACJ,CAAC;EAAA,CACF,CAAC;AAEX,CAAC;AACD,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAA4B;EAAA,IAAvBP,UAAU,GAAAO,KAAA,CAAVP,UAAU;IAAEQ,KAAK,GAAAD,KAAA,CAALC,KAAK;EACvC,OAAOZ,KAAA,CAACT,IAAI;IAAAc,QAAA,GAAC,UAAQ,EAACO,KAAK,CAACC,MAAM,CAACJ,IAAI,EAAC,YAAU;EAAA,CAAM,CAAC;AAC3D,CAAC;AAGH,IAAMK,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,OACChB,IAAA,CAACF,eAAe,CAACmB,QAAQ;IAACC,KAAK,EAAC,UAAU;IAAAX,QAAA,EAEzCP,IAAA,CAACL,mBAAmB;MAAAY,QAAA,EAClBL,KAAA,CAACC,KAAK,CAACgB,SAAS;QAAAZ,QAAA,GACdP,IAAA,CAACG,KAAK,CAACiB,MAAM;UACXT,IAAI,EAAC,MAAM;UACXU,SAAS,EAAEjB,UAAW;UACtBkB,OAAO,EAAE;YAACd,KAAK,EAAE;UAAS;QAAE,CAC7B,CAAC,EACFR,IAAA,CAACG,KAAK,CAACiB,MAAM;UAACT,IAAI,EAAC,SAAS;UAACU,SAAS,EAAET;QAAc,CAAE,CAAC,EACzDZ,IAAA,CAACG,KAAK,CAACiB,MAAM;UAACT,IAAI,EAAC,aAAa;UAACU,SAAS,EAAExB;QAAY,CAAE,CAAC;MAAA,CAC5C;IAAC,CACC;EAAC,CACG,CAAC;AAE9B,CAAC;AAED,eAAemB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}